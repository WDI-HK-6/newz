app.controller('HomeCtrl', ['$scope', '$http', '$rootScope', '$timeout', '$upload', 'fileReader', function($scope, $http, $rootScope, $timeout, $upload, fileReader){

  $scope.getFile = function () {
    $scope.progress = 0;
    fileReader.readAsDataUrl($scope.file, $scope)
    .then(function(result) {
        $scope.imageSrc = result;
    });
  };
  
  $scope.$watch('imageSrc', function() {
    console.log("WATCH TRIGGERED in $watch, homectr");
    $scope.repack();
  });

  $scope.$on("fileProgress", function(e, progress) {
    $scope.progress = progress.loaded / progress.total;
  });

  $scope.feature = {};
  $scope.card = {};

  $scope.minDate = new Date("1946-01-01");
  $scope.maxDate = new Date("2012-12-31");
  $scope.today = new Date();

  // FOR DATEPICKER
  $scope.open = function($event) {
    $event.preventDefault();
    $event.stopPropagation();
    $scope.opened = true;
  };
  $scope.dateOptions = {
    'year-format': "'yy'",
    'starting-day': 1
  };

  // ON DATE SELECT GET THINGS STARTED
  $scope.selectDate = function(date) {
    year = moment(date).format('YYYY');
    getNews(year);
    getFacts(date);
    getHoroscopes(date);
    getMovies(year);
    getSongs(year);  
    numberDaysOld(date);
    $scope.repack();
  }

  var numberDaysOld = function(date) {
    var difference = moment($scope.today).diff(moment(date));

    $scope.daysOld = Math.floor(moment.duration(difference).asDays());
  }

  var getSongs = function(year) {
    $http.get('songlists/' + year + '.json').success(function(data){
      $scope.card.songlist = data['songlist'];
    })
  }

  var getMovies = function(year) {
    $http.get('movies/' + year + '.json').success(function(data){
      $scope.card.movie = data.movie[0]["bestMovie"];
      $scope.card.producers = data.movie[0]["producers"];
      $scope.card.nominees = data.movie[0]["nominees"];
      $scope.card.producersExist = data.movie[0]["producersExist"];
      $scope.card.bestActor = data.movie[0]["bestActor"];
      $scope.card.bestActress = data.movie[0]["bestActress"];
      $scope.card.bestActorMovie = data.movie[0]["bestActorMovie"];
      $scope.card.bestActressMovie = data.movie[0]["bestActressMovie"];
    })
  }

  var getNews = function(year) {
    $http.get('news/' + year + '.json').success(function(data){
      // an array like producers
      $scope.card.news = data.newsarticles["news"];
      // $scope.card.sports = data.result[0]["sports"];
      // $scope.card.other = data.result[0]["other"];
    })
  }

  var getFacts = function(date) {
    newDate = moment(date).format("YYYY-M-DD");  
    $http.get('facts/' + newDate).success(function(data){
      $scope.card.gold = data.gold;
      $scope.card.dowjones = data.dowjones;
      $scope.card.homeprice = data.homeprice;
      $scope.card.newcar = data.newcar;
      $scope.card.bread = data.bread;
      $scope.card.gas = data.gas;
      $scope.card.population = data.population;
    })
  }

  var getHoroscopes = function(date) {
    newDate = moment(date).format("YYYY-M-DD");  
    $http.get('zodiac/' + newDate).success(function(data){
      $scope.card.zodiac = data.zodiacDesc;
      $scope.card.zodiacName = data.zodiacName;
      $scope.card.chinese_horoscope = data.animalDesc;
      $scope.card.animalName = data.animalName;
      $scope.animal_img_src = '/assets/chinese_horoscope/' + $scope.card.animalName + '.jpg';

      console.log("in getHoroscopes " + $scope.animal_img_src);
      $scope.zodiac_img_src = '/assets/zodiac/' + $scope.card.zodiacName + '.png';
      $scope.apply;
      
    })
  }

  $scope.repack = function() {
    $scope.$container.packery();
    console.log("Just repacked");
    // $scope.$container.bindResize();
  }

  $scope.print = function() {  
    html2canvas($("#newspaper"), {
      allowTaint: true,
      useCORS: true,
      // taintTest: false,
      logging: true,
      onrendered: function (canvas) {
        var myImage = canvas.toDataURL("image/jpg");
        var tWindow = window.open("");
        $(tWindow.document.body).html("<img id='Image' src=" + myImage + " style='width:100%;'></img>").ready(function () {
            tWindow.focus();
            tWindow.print();
        });
      }
    });
  }

  $scope.$container = $('#container');
  // init
  $scope.$container.packery({
    itemSelector: '.item',
    "gutter": 5,
    "columnWidth": ".grid-sizer",
    "stamp": ".stamp",
    "columnHeight": ".grid-sizer",
    // "gutter": ".gutter-sizer",
    isInitLayout: false
  });

  $scope.imgLoadedEvents = {
    always: function(instance) {
      $timeout(function(){
        $scope.repack();
      }, 1500)
    }
  }

  $scope.$container.find('.item').each( function( i, itemElem ) {
    // make element draggable with Draggabilly
    var draggie = new Draggabilly( itemElem );
    // bind Draggabilly events to Packery
    $scope.$container.packery( 'bindDraggabillyEvents', draggie );
  });
  
  // make new random date
  var range = $scope.today.getTime() - $scope.minDate.getTime();
  $scope.card.date = new Date($scope.minDate.getTime() + (Math.random() * range));

  // edition is current year - 2015 + 1
  yearInt = parseInt(moment($scope.today).format("YYYY"));
  $scope.card.edition  = yearInt - 2014;
  $scope.selectDate($scope.card.date);

}])

